@page "/data-dictionaries"
@attribute [Authorize(DataDictionaryPermissions.DataDictionaries.Default)]
@using JS.Abp.DataDictionary.DataDictionaries
@using JS.Abp.DataDictionary.Localization
@using JS.Abp.DataDictionary.Shared
@using Microsoft.AspNetCore.Authorization
@using Microsoft.Extensions.Localization
@using Microsoft.AspNetCore.Components.Web
@using Blazorise
@using Blazorise.Components
@using Blazorise.DataGrid
@using Volo.Abp.BlazoriseUI
@using Volo.Abp.BlazoriseUI.Components
@using Volo.Abp.ObjectMapping
@using Volo.Abp.AspNetCore.Components.Messages
@using Volo.Abp.AspNetCore.Components.Web.Theming.Layout
@using JS.Abp.DataDictionary.Permissions
@using Microsoft.AspNetCore.Components
@using Volo.Abp.AspNetCore.Components.Web
@using Volo.Abp.Http.Client
@inherits DataDictionaryComponentBase
@inject IDataDictionariesAppService DataDictionariesAppService
@inject IUiMessageService UiMessageService
@inject IRemoteServiceConfigurationProvider RemoteServiceConfigurationProvider
@inject NavigationManager NavigationManager

@* ************************* PAGE HEADER ************************* *@
<PageHeader Title="@L["DataDictionaries"]" BreadcrumbItems="BreadcrumbItems" Toolbar="Toolbar">

</PageHeader>

@* ************************* SEARCH ************************* *@
<Card>
    <CardBody>
        <Form id="DataDictionarySearchForm" class="mb-3">
            <Addons>
                <Addon AddonType="AddonType.Body">
                    <TextEdit @bind-Text="@Filter.FilterText"
                              Autofocus="true"
                              Placeholder="@L["Search"]">
                    </TextEdit>
                </Addon>
                <Addon AddonType="AddonType.End">
                    <SubmitButton Form="DataDictionarySearchForm" Clicked="GetDataDictionariesAsync">
                        <Icon Name="IconName.Search" Class="me-1"></Icon>@L["Search"]
                    </SubmitButton>
                </Addon>
            </Addons>
        </Form>
    </CardBody>
</Card>

@* ************************* DATA GRID ************************* *@
<Card>
    <CardBody>
        <DataGrid TItem="DataDictionaryDto"
                  Data="DataDictionaryList"
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  Responsive="true"
                  PageSize="PageSize">
            <DataGridColumns>
                <DataGridEntityActionsColumn TItem="DataDictionaryDto" @ref="@EntityActionsColumn">
                    <DisplayTemplate>
                        <EntityActions TItem="DataDictionaryDto" EntityActionsColumn="@EntityActionsColumn">
                            <EntityAction TItem="DataDictionaryDto"
                                          Visible="true"
                                          Clicked="async () => await OpenEditDataDictionaryDetailModalAsync(context)"
                                          Text="@L["EditDetails"]"></EntityAction>
                            <EntityAction TItem="DataDictionaryDto"
                                          Visible="@CanEditDataDictionary"
                                          Clicked="async () => await OpenEditDataDictionaryModalAsync(context)"
                                          Text="@L["Edit"]"></EntityAction>
                            <EntityAction TItem="DataDictionaryDto"
                                          Visible="@CanDeleteDataDictionary"
                                          Clicked="() => DeleteDataDictionaryAsync(context)"
                                          ConfirmationMessage="@(()=> L["DeleteConfirmationMessage"])"
                                          Text="@L["Delete"]"></EntityAction>
                        </EntityActions>
                    </DisplayTemplate>
                </DataGridEntityActionsColumn>
               
              <DataGridColumn TItem="DataDictionaryDto"
                      Field="Code"
                      Caption="@L["DataDictionary:Code"]">
              </DataGridColumn>

              <DataGridColumn TItem="DataDictionaryDto"
                      Field="DisplayText"
                      Caption="@L["DisplayText"]">
              </DataGridColumn>

              <DataGridColumn TItem="DataDictionaryDto"
                      Field="Description"
                      Caption="@L["Description"]">
              </DataGridColumn>

              <DataGridColumn TItem="DataDictionaryDto"
                      Field="IsStatic"
                      Caption="@L["IsStatic"]">
                    <DisplayTemplate>
                        @if (context.IsStatic)
                        {
                            <Icon TextColor="TextColor.Success" Name="@IconName.Check" />
                        }
                        else
                        {
                            <Icon TextColor="TextColor.Danger" Name="@IconName.Times" />
                        }
                    </DisplayTemplate>
              </DataGridColumn>


            </DataGridColumns>
        </DataGrid>
    </CardBody>
</Card>

@* ************************* CREATE MODAL ************************* *@
<Modal @ref="CreateDataDictionaryModal" Closing="@CreateDataDictionaryModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true">
        <Form id="CreateDataDictionaryForm">
            <ModalHeader>
                <ModalTitle>@L["NewDataDictionary"]</ModalTitle>
                <CloseButton Clicked="CloseCreateDataDictionaryModalAsync" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@NewDataDictionaryValidations"
                            Mode="ValidationMode.Auto"
                            Model="@NewDataDictionary"
                            ValidateOnLoad="false">
                     
                    
                    <Validation>
                        <Field>
                            <FieldLabel>@L["DataDictionary:Code"] *</FieldLabel>
                            <TextEdit @bind-Text="@NewDataDictionary.Code" MaxLength="DataDictionaryConsts.CodeMaxLength">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation>
                        <Field>
                            <FieldLabel>@L["DisplayText"] *</FieldLabel>
                            <TextEdit @bind-Text="@NewDataDictionary.DisplayText" MaxLength="DataDictionaryConsts.DisplayTextMaxLength">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation>
                        <Field>
                            <FieldLabel>@L["Description"]</FieldLabel>
                            <TextEdit @bind-Text="@NewDataDictionary.Description" MaxLength="DataDictionaryConsts.DescriptionMaxLength">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Field>
                        <Check TValue="bool" @bind-Checked="@NewDataDictionary.IsStatic">@L["IsStatic"]</Check>
                    </Field>

                    
                    
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseCreateDataDictionaryModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="CreateDataDictionaryForm" Clicked="CreateDataDictionaryAsync" />
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>

@* ************************* EDIT MODAL ************************* *@
<Modal @ref="EditDataDictionaryModal" Closing="@EditDataDictionaryModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true">
        <Form id="EditDataDictionaryForm">
            <ModalHeader>
                <ModalTitle>@L["Update"]</ModalTitle>
                <CloseButton Clicked="CloseEditDataDictionaryModalAsync" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@EditingDataDictionaryValidations"
                            Mode="ValidationMode.Auto"
                            Model="@EditingDataDictionary"
                            ValidateOnLoad="false">
                     
                    
                    <Validation>
                        <Field>
                            <FieldLabel>@L["DataDictionary:Code"] *</FieldLabel>
                            <TextEdit @bind-Text="@EditingDataDictionary.Code" MaxLength="DataDictionaryConsts.CodeMaxLength">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation>
                        <Field>
                            <FieldLabel>@L["DisplayText"] *</FieldLabel>
                            <TextEdit @bind-Text="@EditingDataDictionary.DisplayText" MaxLength="DataDictionaryConsts.DisplayTextMaxLength">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation>
                        <Field>
                            <FieldLabel>@L["Description"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingDataDictionary.Description" MaxLength="DataDictionaryConsts.DescriptionMaxLength">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Field>
                        <Check TValue="bool" @bind-Checked="@EditingDataDictionary.IsStatic">@L["IsStatic"]</Check>
                    </Field>

                    
                    
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseEditDataDictionaryModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="CreateDataDictionaryForm" Clicked="UpdateDataDictionaryAsync" />
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>
